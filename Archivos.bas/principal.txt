Attribute VB_Name = "principal"
' variables publicas
Public dist_va_max As Double
Public dist_max_canton As Double, va_max_sm As Double, va_max_tunel As Double
Public inc_norm_va As Double, va_max As Double
Public inicio As Double, r_re As Double
Public uno As Integer



Function principal(inicioVB, hVB, wVB, kVB, aVB, bVB, cVB, r_reVB, dist_va_maxVB, _
inc_norm_vaVB, va_max_tunelVB, va_maxVB, dist_max_cantonVB, va_max_smVB) As Long()
'recolección de datos e inicialización
'Application.VBE.ActiveVBProject.References.AddFromFile "C:\Documents and Settings\23370\Escritorio\SiReCa\msado15.dll"
inicio = inicioVB
h = hVB
w = wVB
k = kVB
a = aVB
b = bVB
C = cVB
r_re = r_reVB
dist_va_max = dist_va_maxVB
inc_norm_va = inc_norm_vaVB
va_max_tunel = va_max_tunelVB
va_max = va_maxVB
dist_max_canton = dist_max_cantonVB
va_max_sm = va_max_smVB
'inicializar todos los contadores
If h = 10 Then
uno = 1
Sheets(1).Cells(10, 33) = inicio
End If

                        ' inicializamos 3 vanos para poder corregirlos
While 16 > h
    Call radio.radio(h)                                    ' calculamos el radio para el pk
    Sheets(1).Cells(h + 1, 4).Value = vano.vano(Sheets(1).Cells(h, 6).Value)           ' al radio buscado le corresponde un vano
    'If va_max <> va_max_sm Then
        'Call cantonamiento.canton_durante(h, C, k, a)
    'End If
    h = h + 2                                           ' avanzamos una fila y calculamos un nuevo pk
    Sheets(1).Cells(h, 33).Value = Sheets(1).Cells(h - 1, 4) + Sheets(1).Cells(h - 2, 33)
Wend

    Call radio.radio(h)                                    ' calculamos el radio para el pk
    Sheets(1).Cells(h + 1, 4).Value = vano.vano(Sheets(1).Cells(h, 6).Value)           ' al radio buscado le corresponde un vano
    Call regulacion.regulacion(h, a, b, k)                                 ' comprobamos que los incrementos de vano
    'If va_max <> va_max_sm Then
        'Call cantonamiento.canton_durante(h, C, k, a)
    'End If
    Call punto_singular.sing(h, k, a, b)                            ' comprobamos que el poste no cae en un PS
    Call punto_singular.sing1(h, a)                                ' comprobamos que el poste no cae en un PS
    'If va_max <> va_max_sm Then
    'Call cantonamiento.canton_durante(h, C, k, a)
    'End If
    h = h + 2                                           'avanzamos una fila y calculamos nuevo pk
    Sheets(1).Cells(h, 33).Value = Sheets(1).Cells(h - 1, 4) + Sheets(1).Cells(h - 2, 33)
    Dim x(7) As Long
        x(0) = inicio
        x(1) = h
        x(2) = w
        x(3) = k
        x(4) = a
        x(5) = b
        x(6) = C
        x(7) = Sheets(1).Cells(h, 33).Value
    principal = x
End Function
